<shaders>
	<shader name="TEST_SHADER_AGONY"><!-- Doesn't need to be all uppercase -->
		<parameters>
			<param name="Time" type="float"/>
			<param name="Strength" type="float"/>
		</parameters>
		<vertex>
		<![CDATA[
			attribute vec3 Position;
			attribute vec4 Color;
			attribute vec2 TexCoord;
			attribute vec4 RenderData;
			attribute float Scale;
			attribute float Strength;
			attribute float Time;
			
			varying vec4 Color0;
			varying vec2 TexCoord0;
			varying vec4 RenderDataOut;
			varying float ScaleOut;
			varying float StrengthOut;
			varying float TimeOut;
			varying vec2 PixelSize;
			
			uniform mat4 Transform;
			
			void main(void)
			{
				RenderDataOut = RenderData;
				ScaleOut = Scale;
				StrengthOut = Strength;
				TimeOut = Time;
				Color0 = Color;
				TexCoord0 = TexCoord;
				PixelSize = vec2(ScaleOut/960.0, ScaleOut/540.0);
				gl_Position = Transform * vec4(Position.xyz, 1.0);
			}
		]]>
		</vertex>
		<fragment>
		<![CDATA[
			varying lowp vec4 Color0;
			varying mediump vec2 TexCoord0;
			varying lowp vec4 RenderDataOut;
			varying lowp float ScaleOut;
			varying lowp float StrengthOut;
			varying lowp float TimeOut;
			varying mediump vec2 PixelSize;
			
			uniform sampler2D Texture0;
			
			void main(void)
			{
				vec4 Color = Color0 * texture2D(Texture0, TexCoord0);
				vec4 Color1 = Color0 * texture2D(Texture0, TexCoord0 + vec2(PixelSize.x*StrengthOut ,0.0));
				vec4 Color2 = Color0 * texture2D(Texture0, TexCoord0 + vec2(-PixelSize.x*StrengthOut ,0.0));
				gl_FragColor = vec4(Color1.r, Color2.g, Color.b, Color.a);
			}
		]]>
		</fragment>
	</shader>
</shader>